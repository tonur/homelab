---
- name: Ensure required packages
  apt:
    name:
      - wireguard
      - wireguard-tools
      - nftables
      - iproute2
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Validate required peer configuration
  assert:
    that:
      - edge_gateway_wg_peer_public_key | length > 0
      - edge_gateway_wg_peer_endpoint | length > 0
    fail_msg: "edge_gateway_wg_peer_public_key and edge_gateway_wg_peer_endpoint must be defined (set in host/group vars or vaulted)."
    success_msg: "Peer configuration present."

- name: Generate WireGuard private key (first run)
  command: wg genkey
  register: wg_private_key_gen
  when: edge_gateway_generate_wg_key and (edge_gateway_wg_private_key is not defined)
  changed_when: true

- name: Set generated private key fact
  set_fact:
    edge_gateway_wg_private_key: "{{ wg_private_key_gen.stdout }}"
  when: edge_gateway_generate_wg_key and (edge_gateway_wg_private_key is not defined)

- name: Fail if no private key available
  fail:
    msg: "WireGuard private key must be provided (edge_gateway_wg_private_key) or generation enabled"
  when: edge_gateway_wg_private_key is not defined

- name: Ensure config directory exists
  file:
    path: /etc/wireguard
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Deploy WireGuard config
  template:
    src: wg0.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: '0600'
  notify: restart wireguard

- name: Enable and start WireGuard interface
  systemd:
    name: wg-quick@wg0
    enabled: true
    state: started

- name: Enable IP forwarding persistently
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    sysctl_set: true
    reload: true

- name: Deploy nftables ruleset
  template:
    src: nftables.conf.j2
    dest: /etc/nftables.conf
    owner: root
    group: root
    mode: '0644'
  notify: reload nftables

- name: Enable and start nftables
  systemd:
    name: nftables
    enabled: true
    state: started

- name: Install health-check script
  copy:
    src: health-check.sh
    dest: /usr/local/bin/edge-gateway-health.sh
    owner: root
    group: root
    mode: '0755'
  when: edge_gateway_enable_healthcheck

- name: Create systemd timer unit
  copy:
    dest: /etc/systemd/system/edge-gateway-health.timer
    content: |
      [Unit]
      Description=Edge gateway WireGuard health timer

      [Timer]
      OnBootSec=2m
      OnUnitActiveSec={{ edge_gateway_healthcheck_interval_minutes }}m
      AccuracySec=1m
      Persistent=true

      [Install]
      WantedBy=timers.target
  when: edge_gateway_enable_healthcheck

- name: Create systemd service unit
  copy:
    dest: /etc/systemd/system/edge-gateway-health.service
    content: |
      [Unit]
      Description=Edge gateway WireGuard health check

      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/edge-gateway-health.sh
  when: edge_gateway_enable_healthcheck

- name: Reload systemd daemon
  systemd:
    daemon_reload: true
  when: edge_gateway_enable_healthcheck

- name: Enable and start health timer
  systemd:
    name: edge-gateway-health.timer
    enabled: true
    state: started
  when: edge_gateway_enable_healthcheck

- name: Show generated WireGuard private key (first run only)
  debug:
    msg: "Generated WireGuard private key (store securely & encrypt with SOPS): {{ edge_gateway_wg_private_key }}"
  when: edge_gateway_generate_wg_key and wg_private_key_gen is defined
  no_log: true
