---
# k3s-worker-nodes role: Install and configure Kubernetes worker nodes
# 
# This role sets up k3s agents (worker nodes) that join the control plane:
# - Downloads and installs k3s in agent mode
# - Connects to control plane using server IP and node token

- name: Get k3s server host from inventory
  set_fact:
    k3s_server_host: "{{ groups['k3s_server'][0] }}"

- name: Get k3s server Tailscale IP
  command: tailscale status --json
  register: tailscale_status
  delegate_to: "{{ k3s_server_host }}"
  
- name: Parse Tailscale status to get server IP
  set_fact:
    k3s_server_tailscale_ip: "{{ (tailscale_status.stdout | from_json).Self.TailscaleIPs[0] }}"

- name: Get current worker node Tailscale IP
  command: tailscale status --json
  register: worker_tailscale_status
  
- name: Parse worker Tailscale status to get current host IP
  set_fact:
    current_tailscale_ip: "{{ (worker_tailscale_status.stdout | from_json).Self.TailscaleIPs[0] }}"

- name: Get k3s node token from server
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: k3s_token_file
  delegate_to: "{{ k3s_server_host }}"
  become: true

- name: Set k3s token fact
  set_fact:
    k3s_token: "{{ k3s_token_file.content | b64decode | trim }}"

- name: Download k3s installer
  get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: '0755'

- name: Install k3s worker node
  environment:
    K3S_URL: "https://{{ k3s_server_tailscale_ip }}:6443"
    K3S_TOKEN: "{{ k3s_token }}"
    INSTALL_K3S_EXEC: >
      agent
      --flannel-iface tailscale0
      --node-ip {{ current_tailscale_ip }}
      --node-label media=true
      --node-label node.kubernetes.io/media=true
  shell: /tmp/k3s-install.sh
  args:
    creates: /usr/local/bin/k3s-agent

- name: Start and enable k3s-agent
  systemd:
    name: k3s-agent
    state: started
    enabled: true

- name: Wait for node to join cluster
  pause:
    seconds: 30

- name: Apply taint to media node to reserve for media workloads
  command: >
    kubectl taint nodes {{ inventory_hostname }} 
    media=true:NoSchedule --overwrite
  delegate_to: "{{ k3s_server_host }}"
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  become: true
