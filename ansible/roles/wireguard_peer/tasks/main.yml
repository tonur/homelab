---
- name: Ensure required packages
  apt:
    name:
      - wireguard
      - wireguard-tools
      - iproute2
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Generate WireGuard private key (first run)
  command: wg genkey
  register: wireguard_peer_key_gen
  when: wireguard_peer_generate_key and (wireguard_peer_private_key is not defined or not wireguard_peer_private_key)
  changed_when: true

- name: Set generated private key fact
  set_fact:
    wireguard_peer_private_key: "{{ wireguard_peer_key_gen.stdout }}"
  when: wireguard_peer_generate_key and (wireguard_peer_private_key is not defined or not wireguard_peer_private_key)
  no_log: true

- name: Fail if no private key available
  fail:
    msg: "WireGuard peer private key must be provided or generation enabled"
  when: wireguard_peer_private_key is not defined or not wireguard_peer_private_key

- name: Derive public key
  command: bash -c 'echo "{{ wireguard_peer_private_key }}" | wg pubkey'
  register: wireguard_peer_pub
  changed_when: false
  no_log: true

- name: Set public key fact
  set_fact:
    wireguard_peer_public_key: "{{ wireguard_peer_pub.stdout }}"
  no_log: true

- name: Ensure config directory exists
  file:
    path: /etc/wireguard
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Deploy WireGuard peer config
  template:
    src: wg-peer.conf.j2
    dest: /etc/wireguard/{{ wireguard_peer_interface }}.conf
    owner: root
    group: root
    mode: '0600'
  notify: restart wireguard peer

- name: Enable and start WireGuard peer interface
  systemd:
    name: wg-quick@{{ wireguard_peer_interface }}
    enabled: true
    state: started

- name: Show generated WireGuard peer private key (first run only)
  debug:
    msg: "Generated WireGuard peer private key (stored via SOPS)."
  when: wireguard_peer_generate_key and wireguard_peer_key_gen is defined
  no_log: true
