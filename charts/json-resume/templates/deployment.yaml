---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: json-resume
  namespace: json-resume
  labels:
    app.kubernetes.io/name: json-resume
    app.kubernetes.io/component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: json-resume
  template:
    metadata:
      labels:
        app.kubernetes.io/name: json-resume
        app.kubernetes.io/component: frontend
      annotations:
        checksum/json-resume: {{ .Files.Get "json-resume.json" | sha256sum }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: build-resume
          image: "node:24-alpine"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              cd /tmp
              export NODE_PATH=/tmp/node_modules
              npm install resume-cli
              npm install jsonresume-theme-stackoverflow
              /tmp/node_modules/.bin/resume export /workspace/index.html --resume /workspace/resume.json --theme stackoverflow
              echo "Resume built successfully"
              ls -la /workspace/
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: resume-data
              mountPath: /workspace/resume.json
              subPath: json-resume.json
              readOnly: true
            - name: generated-html
              mountPath: /workspace
            - name: tmp
              mountPath: /tmp
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      containers:
      - name: nginx
        image: "nginx:alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: generated-html
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /var/cache/nginx
        - name: run
          mountPath: /var/run
        livenessProbe:
          httpGet:
            path: /index.html
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /index.html
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: generated-html
        emptyDir: {}
      - name: resume-data
        configMap:
          name: json-resume-data
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: run
        emptyDir: {}
