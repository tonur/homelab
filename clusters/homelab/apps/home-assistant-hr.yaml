---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: pajikos
  namespace: apps
spec:
  interval: 24h
  url: https://pajikos.github.io/home-assistant-helm-chart/

---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: apps
spec:
  interval: 15m
  targetNamespace: home-assistant
  releaseName: home-assistant
  chart:
    spec:
      chart: home-assistant
      version: "0.2.76"
      sourceRef:
        kind: HelmRepository
        name: pajikos
        namespace: apps
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    # Home Assistant configuration
    homeassistant:
      # Resource configuration
      resources:
        limits:
          cpu: 2000m
          memory: 2Gi
        requests:
          cpu: 100m
          memory: 512Mi
      
      # Environment variables
      env:
        TZ: "UTC"
        HASS_SERVER_HOST: "0.0.0.0"
      
      # Security context
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      
      # Persistence configuration
      persistence:
        enabled: true
        size: 5Gi
        storageClass: "local-path"
        accessMode: ReadWriteOnce
      
      # HTTP configuration for reverse proxy
      configuration: |
        # Loads default set of integrations. Do not remove.
        default_config:

        # Load frontend themes from the themes folder
        frontend:
          themes: !include_dir_merge_named themes

        # HTTP Configuration for reverse proxy support
        http:
          use_x_forwarded_for: true
          trusted_proxies:
            - 10.42.0.0/16    # k3s pod network
            - 10.43.0.0/16    # k3s service network  
            - 172.16.0.0/12   # Docker default bridge networks
            - 192.168.0.0/16  # Private networks
            - 127.0.0.1       # Localhost

        automation: !include automations.yaml
        script: !include scripts.yaml
        scene: !include scenes.yaml

    # Service configuration
    service:
      type: ClusterIP
      port: 8123

    # Ingress configuration
    ingress:
      enabled: true
      annotations:
        # Enable external-dns to create DNS records automatically
        external-dns.alpha.kubernetes.io/hostname: "home.kragh.dev"
        # Optional: specify TTL for the DNS record
        external-dns.alpha.kubernetes.io/ttl: "300"
        # Enable cert-manager to create certificates automatically
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      hosts:
        - host: home.kragh.dev
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - home.kragh.dev
          secretName: home-assistant-tls

---
# DNSEndpoint for external-dns integration
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: home-assistant-dns
  namespace: home-assistant
  annotations:
    external-dns.alpha.kubernetes.io/hostname: "home.kragh.dev"
spec:
  endpoints:
    - dnsName: home.kragh.dev
      recordTTL: 300
      recordType: A
      targets:
        - 198.55.102.244
